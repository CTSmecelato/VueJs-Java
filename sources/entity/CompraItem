package entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 *
 * @author caroline
 */

@Entity
@Table(name = "compraItem")
public class CompraItem implements Serializable {

  private static final long serialVersionUID = 1L;
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Basic(optional = false)
  @Column(name = "compraitem_id")
  private Long id;

  @Column(name = "compraitem_preco")
  private BigDecimal preco = BigDecimal.ZERO;

  @Column(name = "compraitem_qntd")
  private BigDecimal quantidade = BigDecimal.ONE;

  @JoinColumn(name = "prod_id", referencedColumnName = "prod_id")
  @ManyToOne(cascade = CascadeType.MERGE)
  private Produto produto;

  @ManyToOne
  @JoinColumn(name = "compra_id", referencedColumnName = "compra_id")
  private Compra compra;

  public CompraItem() {
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public BigDecimal getPreco() {
    return preco;
  }

  public void setPreco(BigDecimal preco) {
    this.preco = preco;
  }

  public BigDecimal getQuantidade() {
    return quantidade;
  }

  public void setQuantidade(BigDecimal quantidade) {
    this.quantidade = quantidade;
  }

  public BigDecimal getSubtotal() {
    return preco.multiply(quantidade);
  }

  public Produto getProduto() {
    return produto;
  }

  public void setProduto(Produto produto) {
    this.produto = produto;
  }

  public Compra getCompra() {
    return compra;
  }

  public void setCompra(Compra compra) {
    this.compra = compra;
  }

  public boolean equals(Object object) {
    if (this == object) return true;
    if (object == null || getClass() != object.getClass()) return false;
    if (!super.equals(object)) return false;
    CompraItem that = (CompraItem) object;
    return java.util.Objects.equals(produto, that.produto) &&
      java.util.Objects.equals(compra, that.compra);
  }

  public int hashCode() {
    return Objects.hash(super.hashCode(), produto, compra);
  }

  @Override
  public String toString() {
    return id.toString();
  }
}
